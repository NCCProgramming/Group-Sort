#Dont know how to upload images heres so Im rewriting the class notes

#these are group combinations for 6 students in groups of 2
#EXAMPLE:
#(student_1,student_2)
#(student_1,student_3) (student_2,student_3)
#(student_1,student_4) (student_2,student_4) (student_3,student_4)
#(student_1,student_5) (student_2,student_5) (student_3,student_5) (student_4,student_5)
#(student_1,student_6) (student_2,student_6) (student_3,student_6) (student_4,student_6) (student_5,student_6)

AllCombo()
1,2 
1,3 2,3 
1,4 2,4 3,4 
1,5 2,5 3,5 4,5
1,6 2,6 3,6 4,6 5,6

day_1: [1,2 3,4 5,6]              check[] # boolean 0=Fales (not used) 1=True (been used)
                                  1
                                  0 0
                                  0 0 1
                                  0 0 0 0
                                  0 0 0 0 1
                                  
day_2: [1,3 2,4 error]  (insifficient groups in the day, no more possible groups, go back one and try different group)
                                  check[] # boolean 0=Fales (not used) 1=True (been used)
                                  (im replacing previous 1's with 2's to display differences from day_1 used choices)
                                  2
                                  1 0
                                  0 1 2
                                  0 0 0 0
                                  0 0 0 0 2
                                  
RETRY - go back once and use different second group in day 2
day_2: [1,3 2,5 4,6]              check[] # boolean 0=Fales (not used) 1=True (been used)
                                  (replaced previous 1's with 2's to display difference from previous-day used choices)
                                  2
                                  1 0
                                  0 0 2
                                  0 1 0 0
                                  0 0 0 1 2
                                  
day_3: [1,4 2,6 3,5]              check[] # boolean 0=Fales (not used) 1=True (been used)
                                  (replaced previous 1's with 2's to display difference from previous-day used choices)
                                  2
                                  2 0
                                  1 0 2
                                  0 2 1 0
                                  0 1 0 2 2
                                  
day_4: [1,5 2,3 error]  (insifficient groups in the day, no more possible groups, go back one and try different group)
                                  check[] # boolean 0=Fales (not used) 1=True (been used)
                                  (replaced previous 1's with 2's to display difference from previous-day used choices)
                                  2
                                  2 1
                                  2 0 2
                                  1 2 1 0
                                  0 2 0 2 2
                                  
RETRY - go back once and use different second group in day 4
day_4: [1,5 2,4 3,6]              check[] # boolean 0=Fales (not used) 1=True (been used)
                                  (replaced previous 1's with 2's to display difference from previous-day used choices)
                                  2
                                  2 0
                                  2 1 2
                                  1 2 2 0
                                  0 2 1 2 2
                                  
day_4: [1,6 2,3 4,5]              check[] # boolean 0=Fales (not used) 1=True (been used)
                                  (replaced previous 1's with 2's to display difference from previous-day used choices)
                                  2
                                  2 1
                                  2 2 2
                                  2 2 2 1
                                  1 2 2 2 2
                                  
TOTAL POSSIBLE GROUPS = 4 days worth of 2 people teams (without student overlap)

# EXTRA NOTES
while(boole exists):
  int i
  int j
  
  i++
    j++
    i--
  i=0
  
# EXTRA NOTES
#go through AllCombo
Check for Validity():
  check element
  check check
